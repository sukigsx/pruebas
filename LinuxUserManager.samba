#!/bin/bash

SAMBA_CONF="/etc/samba/smb.conf"

#colores
rojo="\e[0;31m\033[1m" #rojo
verde="\e[;32m\033[1m"
azul="\e[0;34m\033[1m"
amarillo="\e[0;33m\033[1m"
rosa="\e[0;35m\033[1m"
turquesa="\e[0;36m\033[1m"
borra_colores="\033[0m\e[0m" #borra colores

menu_info(){
# muestra el menu de sukigsx
echo ""
echo -e "${rosa}            _    _                  ${azul}   Nombre del script${borra_colores} ($NombreScript)"
echo -e "${rosa}  ___ _   _| | _(_) __ _ _____  __  ${azul}   Descripcion${borra_colores} ($DescripcionDelScript)"
echo -e "${rosa} / __| | | | |/ / |/ _\ / __\ \/ /  ${azul}   Version            =${borra_colores} $version"
echo -e "${rosa} \__ \ |_| |   <| | (_| \__ \>  <   ${azul}   Conexion Internet  =${borra_colores} $conexion"
echo -e "${rosa} |___/\__,_|_|\_\_|\__, |___/_/\_\  ${azul}   Software necesario =${borra_colores} $software"
echo -e "${rosa}                  |___/             ${azul}   Actualizado        =${borra_colores} $actualizado"
echo -e ""
echo -e "${azul} Contacto:${borra_colores} (Correo $Correo) (Web $Web)${borra_colores}"
echo ""
}

function show_users() {
    echo "Usuarios del sistema:"
    awk -F: '$3 >= 1000 && $1 != "nobody" { print $1 }' /etc/passwd
}

function configurar_samba() {
    clear
    show_users
    echo ""
    echo "=== Configuraci√≥n de nuevo recurso Samba ==="
    read -p "Nombre del recurso compartido el que se ve: " recurso_compartido
    read -p "Ruta absoluta al recurso (ej: /home/$recurso_compartido): " ruta
    read -p "Usuarios permitidos (separados por espacio): " -a usuarios

    CONFIG="[$recurso_compartido]
    path = $ruta
    valid users = ${usuarios[@]}
    read only = no
    browsable = yes
    writable = yes
    create mask = 0775
    directory mask = 0775
"

    if ! grep -q "\[$recurso_compartido\]" "$SAMBA_CONF"; then
        echo "$CONFIG" | sudo tee -a "$SAMBA_CONF" > /dev/null
        echo "‚úÖ Configuraci√≥n a√±adida para [$recurso_compartido]."
    else
        echo "‚ö†Ô∏è El bloque [$recurso_compartido] ya existe. No se a√±adi√≥ nada."
    fi

    sudo systemctl restart smbd
    echo "üîÅ Servicio Samba reiniciado."
}

function ver_configuracion() {
    echo "=== Contenido de $SAMBA_CONF ==="
    sudo less "$SAMBA_CONF"
}

function eliminar_configuracion() {
    read -p "Nombre del recurso compartido a eliminar: " recurso_compartido

    # Hacemos una copia de seguridad
    sudo cp "$SAMBA_CONF" "$SAMBA_CONF.bak"

    # Usamos sed para eliminar el bloque completo
    sudo sed -i "/\[$recurso_compartido\]/,/^$/d" "$SAMBA_CONF"

    echo "üóëÔ∏è Configuraci√≥n de [$recurso_compartido] eliminada."

    sudo systemctl restart smbd
    echo "üîÅ Servicio Samba reiniciado."
}

function menu() {
    while true; do
        clear
        menu_info
        echo
        echo -e "${azul}--- Gestor de Configuraci√≥n de Samba, carpeta base${borra_colores} $base_dir ${azul}---${borra_colores}"
        echo -e ""
        echo -e "${azul}  1. A√±adir recurso compartido${borra_colores}"
        echo -e "${azul}  2. Ver archivo smb.conf${borra_colores}"
        echo -e "${azul}  3. Eliminar recurso compartido${borra_colores}"
        echo -e "${azul}  4. Reiniciar servicio Samba${borra_colores}"
        echo -e "${azul} 99. Salir${borra_colores}"
        echo ""
        read -p " Seleccione una opci√≥n: " opcion

        case $opcion in
            1) configurar_samba ;;
            2) ver_configuracion ;;
            3) eliminar_configuracion ;;
            4) sudo systemctl restart smbd; echo ""; echo -e "üîÅ ${verde}Servicio Samba reiniciado.${borra_colores}"; sleep 2 ;;
            5) break ;;
            *) echo ""; echo -e " ‚ùå ${amarillo}Opci√≥n inv√°lida.${borra_colores}"; sleep 2 ;;
        esac
    done
}

function control_ejecucion(){
    if [[ $NombreScript == "Linux User Manager" ]]; then
        echo ""
    else
        clear
        echo ""
        echo -e "${amarillo} Hay que ejecutar el script desde LinuxUserManager.sh${borra_colores}"
        echo ""
        echo -e "${azul} GRACIAS POR UTILIZAR MI SCRIPT${borra_colores}"
        echo ""
        sleep 1
        exit
    fi
    clear
}

# Verificar permisos de root
if [[ $EUID -ne 0 ]]; then
    echo -e ""
    echo -e "‚ö†Ô∏è ${rojo}Este script debe ejecutarse como root.${borra_colores}"
    echo -e ""
    exit 1
fi
control_ejecucion
base_dir=$(< /tmp/base_dir)
menu
