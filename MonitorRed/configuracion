#!/bin/bash

# VARIABLE QUE RECOJEN LAS RUTAS
ruta_ejecucion=$(dirname "$(readlink -f "$0")") #es la ruta de ejecucion del script sin la / al final
ruta_escritorio=$(xdg-user-dir DESKTOP) #es la ruta de tu escritorio sin la / al final

#toma el control al pulsar control + c
trap ctrl_c INT
function ctrl_c()
{
clear
echo ""
echo -e "${azul} Gracias ${rosa}$(whoami)${azul}. Por utilizar mi script.${borra_colores}"
echo ""
sleep 1
exit
}

#colores
rojo="\e[0;31m\033[1m" #rojo
verde="\e[;32m\033[1m"
azul="\e[0;34m\033[1m"
amarillo="\e[0;33m\033[1m"
rosa="\e[0;35m\033[1m"
turquesa="\e[0;36m\033[1m"
borra_colores="\033[0m\e[0m" #borra colores

menu_info(){
# muestra el menu de sukigsx
clear
echo ""
echo -e "${rosa}            _    _                  ${azul}   Nombre del script ( ${borra_colores}$NombreScript${azul} )${borra_colores}"
echo -e "${rosa}  ___ _   _| | _(_) __ _ _____  __  ${azul}   Descripcion ( ${borra_colores}$DescripcionDelScript${azul})${borra_colores}"
echo -e "${rosa} / __| | | | |/ / |/ _\ / __\ \/ /  ${azul}   Version            =${borra_colores} $version"
echo -e "${rosa} \__ \ |_| |   <| | (_| \__ \>  <   ${azul}   Conexion Internet  =${borra_colores} $conexion"
echo -e "${rosa} |___/\__,_|_|\_\_|\__, |___/_/\_\  ${azul}   Software necesario =${borra_colores} $software"
echo -e "${rosa}                  |___/             ${azul}   Actualizado        =${borra_colores} $actualizado"
echo -e ""
echo -e "${azul} Contacto: ( ${borra_colores}Correo $Correo${azul} ) ( ${borra_colores}Web $Web${azul} )${borra_colores}"
echo ""
echo -e "${azul} Estado de configuracion del script:${borra_colores}"
echo ""
echo -e "${azul}    Servicios${borra_colores} =${amarillo} $configurado_servicios${borra_colores}"
echo -e "${azul}    Ips      ${borra_colores} =${amarillo} $configurado_ips${borra_colores}"
echo -e "${azul}    Dominios ${borra_colores} =${amarillo} $configurado_dominios${borra_colores}"
echo ""
}

# Función para validar una dirección IP
validate_ip() {
local ip=$1
local valid_ip_regex="^([0-9]{1,3}\.){3}[0-9]{1,3}$"

if [[ $ip =~ $valid_ip_regex ]]; then
    ip_correpto="si"
else
    echo -e "${amarillo} Error: Dirección IP no válida.${borra_colores}"
    ip_correpto="no"
fi
}

# Función para validar un nombre sin caracteres especiales ni en blanco
validate_name() {
local name=$1
local valid_name_regex="^[a-zA-Z0-9_]+$"

if [[ $name =~ $valid_name_regex && ! -z $name ]]; then
    nombre_correpto="si"
else
    echo -e "${amarillo} Error: Nombre no válido. Debe contener solo letras, números y guiones bajos, y no puede estar en blanco.${borra_colores}"
    nombre_correpto="no"
fi
}





#carga el fichero de configurado si o no (configuradosino) que contiene las variables para saber lo que esta configurado.
source $ruta_ejecucion/configuradosino

while :
do
    #carga el fichero de configurado si o no (configuradosino) que contiene las variables para saber lo que esta configurado.
    source $ruta_ejecucion/configuradosino
    menu_info
    echo -e "${verde} - MENU DE CONFIGURACION -${borra_colores}"
    echo ""
    echo -e "   ${azul} 1-${borra_colores} Servicios que tengas en una misma ip (ej. 192.168.1.1:22 192.168.1.1:8080)"
    echo -e "   ${azul} 2-${borra_colores} Ips activas en tu red (ej. movil 192.168.1.50, tv 192.168.1.45)"
    echo -e "   ${azul} 3-${borra_colores} Dominios activos (ej. coches.web.es, motos.web.es)"
    echo -e ""
    echo -e "   ${azul} 4-${borra_colores} Borrar toda la configuracion."
    echo -e ""
    echo -e "   ${azul} 5-${borra_colores} Programar para informar a un boot de telegram."
    echo -e ""
    echo -e "   ${azul}90-${borra_colores} Ayuda"
    echo -e "   ${azul}99-${borra_colores} Salir sin configurar."
    echo ""
    echo -e -n "${azul} Selecciona el numero para configurar ->${borra_colores} "; read opcion
    case $opcion in
        1)
            ;;

        2)  #configurar configurado_ips
            while true
            do
                clear
                echo ""
                echo -e "${azul}- Listado de tus Ips para su comprobacion. -${borra_colores}"
                echo ""
                tail -n +2 $ruta_ejecucion/MonitorRedIps.config | awk -F'[[\]=]+' '{print "\033[32m" $3 "\033[0m =", "\033[32m" $2 "\033[0m"}' | column -t; echo ""
                echo ""

                # Solicitar y validar la dirección IP
                echo -e "${amarillo} Ej. router 192.168.1.1 (S -> Terminar de introducir datos.).${borra_colores}"
                read -p " Dime un Nombre Dispositivo espacio y su dirección IP -> " name ip
                echo ""
                if  [ "$name" == "s" ] || [ "$name" == "S" ]; then
                    echo "saliendo"; read p
                    sed -i 's/configurado_ips="no"/configurado_ips="si"/' $ruta_ejecucion/configuradosino
                    break
                fi

                validate_ip "$ip"
                validate_name "$name"

                # Verifica si se debe salir del bucle


                # Agrega la entrada al archivo como un nuevo elemento del array
                if [[ "$ip_correpto" == "si" ]] && [[ "$nombre_correpto" == "si" ]]; then
                    echo "ips[$ip]=$name" >> $ruta_ejecucion/MonitorRedIps.config
                    echo ""
                    echo -e " Dispositivo ${azul}$name${borra_colores} con la ${azul}$ip${borra_colores} = ${verde}ok${borra_colores}."
                    sleep 2
                else
                    echo -e "${rojo} Datos de dispositivo incorreptos.${borra_colores}"
                    echo ""
                    read -p " Pulsa una tecla para continuar." p
                fi
            done
            ;;

        3);;

        4)  #borra toda la configuracion y lo deja como el inicio
            echo ""
            read -p " ¿ Seguro que quieres borrar toda la configuracion (S/n)? -> " sn
            if [[ "$sn" == "s" ]] || [[ "$sn" == "S" ]]; then
                rm $ruta_ejecucion/MonitorRedIps.config 2>/dev/null 1>/dev/null 0>/dev/null
                rm $ruta_ejecucion/MonitorRedDominios.config 2>/dev/null 1>/dev/null 0>/dev/null
                rm $ruta_ejecucion/MonitorRedServicios.config 2>/dev/null 1>/dev/null 0>/dev/null
                echo 'configurado_ips="no"' >> $ruta_ejecucion/configuradosino
                echo 'configurado_dominios="no"' >> $ruta_ejecucion/configuradosino
                echo 'configurado_servicios="no"' >> $ruta_ejecucion/configuradosino
                echo -e "${amarillo} Toda la configuracion restablecida a sus valores iniciales.${borra_colores}"; sleep 2
            else
                echo ""
                echo -e "${verde} No se borra nada.${borra_colores}"; sleep 2
            fi
            ;;

        70) #opcion de terminar de configurar

            ;;

        90) #ayuda
            clear
            cat $ruta_ejecucion/ayuda
            read p
            ;;

        99) #salir
            ctrl_c
            ;;

        *)  echo ""
            echo -e "${amarillo} Opcion no valida del menu.${borra_colores}"
            sleep 2
            ;;
    esac
done

