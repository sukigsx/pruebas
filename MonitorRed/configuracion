#!/bin/bash

#colores
rojo="\e[0;31m\033[1m" #rojo
verde="\e[;32m\033[1m"
azul="\e[0;34m\033[1m"
amarillo="\e[0;33m\033[1m"
rosa="\e[0;35m\033[1m"
turquesa="\e[0;36m\033[1m"
borra_colores="\033[0m\e[0m" #borra colores

menu_info(){
# muestra el menu de sukigsx
clear
echo ""
echo -e "${rosa}            _    _                  ${azul}   Nombre del script ( ${borra_colores}$NombreScript${azul} )${borra_colores}"
echo -e "${rosa}  ___ _   _| | _(_) __ _ _____  __  ${azul}   Descripcion ( ${borra_colores}$DescripcionDelScript${azul})${borra_colores}"
echo -e "${rosa} / __| | | | |/ / |/ _\ / __\ \/ /  ${azul}   Version            =${borra_colores} $version"
echo -e "${rosa} \__ \ |_| |   <| | (_| \__ \>  <   ${azul}   Conexion Internet  =${borra_colores} $conexion"
echo -e "${rosa} |___/\__,_|_|\_\_|\__, |___/_/\_\  ${azul}   Software necesario =${borra_colores} $software"
echo -e "${rosa}                  |___/             ${azul}   Actualizado        =${borra_colores} $actualizado"
echo -e ""
echo -e "${azul} Contacto: ( ${borra_colores}Correo $Correo${azul} ) ( ${borra_colores}Web $Web${azul} )${borra_colores}"
echo ""
echo -e "${azul} Estado de configuracion del script:${borra_colores}"
echo ""
echo -e "${azul}    Servicios${borra_colores} =${amarillo} $configurado_servicios${borra_colores}"
echo -e "${azul}    Ips      ${borra_colores} =${amarillo} $configurado_ips${borra_colores}"
echo -e "${azul}    Dominios ${borra_colores} =${amarillo} $configurado_dominios${borra_colores}"
echo ""
}

#carga los ficheros de configuracion
source $ruta_ejecucion/MonitorRedServicios.config
source $ruta_ejecucion/MonitorRedIps.config
source $ruta_ejecucion/MonitorRedDominios.config

while :
do
    menu_info
    echo -e "${verde} - MENU DE CONFIGURACION -${borra_colores}"
    echo ""
    echo -e "   ${azul} 1-${borra_colores} Servicios que tengas en una misma ip (ej. 192.168.1.1:22 192.168.1.1:8080)"
    echo -e "   ${azul} 2-${borra_colores} Ips activas en tu red (ej. movil 192.168.1.50, tv 192.168.1.45)"
    echo -e "   ${azul} 3-${borra_colores} Dominios activos (ej. coches.web.es, motos.web.es)"
    echo -e ""
    echo -e "   ${azul}70-${borra_colores} Terminar de configurar."
    echo -e ""
    echo -e "   ${azul}90-${borra_colores} Ayuda"
    echo -e "   ${azul}99-${borra_colores} Salir"
    echo ""
    echo -e -n "${azul} Selecciona el numero para configurar ->${borra_colores} "; read opcion
    case $opcion in
        1)
            ;;

        2)  #configurar configurado_ips
            echo "declare -A ips" >> $ruta_ejecucion/MonitorRed/MonitorRedIps.config
            while true; do
                menu_info
                echo -e -n " Dime la IP y el nombre del dispositivo ( S o s = terminar de introducir datos ) -> "
                read ip dispositivo
                if [ "$ip" = "S" ] || [ "$ip" = "s" ]; then
                    #comprueba si existen ips
                    if grep -q "\[" $ruta_ejecucion/MonitorRed/MonitorRedIps.config; then
                        echo ""
                        echo -e "${verde} Terminada la configuracion de ips.${borra_colores}"
                        sleep 2
                        break
                    else
                        rm $ruta_ejecucion/MonitorRed/MonitorRedIps.config &>/dev/null
                        echo 'configurado_ips="no"' >> $ruta_ejecucion/MonitorRed/MonitorRedIps.config
                        echo "Has salido sin configurar las Ips."
                        sleep 2
                        break
                    fi

                fi

                if [ "$dispositivo" = "" ]; then
                    echo -e "${rojo} No has puesto los datos correctos.${borra_colores}"
                    sleep 2
                fi

                # Validar la IP
                if [[ $ip =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
                    valid_ip=true
                    IFS='.' read -r -a octetos <<< "$ip"
                    for octeto in "${octetos[@]}"; do
                        if ((octeto < 0 || octeto > 255)); then
                            valid_ip=false
                            break
                        fi
                    done
                if $valid_ip; then
                    echo -e " $ip $dispositivo = ${verde}ok${borra_colores}"
                    echo "  ["$ip"]="$dispositivo"" >> $ruta_ejecucion/MonitorRed/MonitorRedIps.config
                else
                    echo -e "${rojo} IP no válida. Por favor, introduce una IP correcta.${borra_colores}"
                fi
                else
                    echo -e "${rojo} IP no válida. Por favor, introduce una IP correcta.${borra_colores}"
                fi
                sleep 1
                done
                echo 'configurado_ips="si"' >> $ruta_ejecucion/MonitorRed/MonitorRedIps.config
            ;;

        3);;

        70) #opcion de terminar de configurar
            #comprueba si se ha configurado algun servicio
            source $ruta_ejecucion/MonitorRed/MonitorRedServicios.config
            source $ruta_ejecucion/MonitorRed/MonitorRedIps.config
            source $ruta_ejecucion/MonitorRed/MonitorRedDominios.config
            if [ "$configurado_servicios" = "si" ] || [ "$configurado_ips" = "si" ] || [ "$configurado_dominios" = "si" ]; then
                bash $ruta_ejecucion/MonitorRed/MonitorRed
            else
                echo
                echo -n -e "${amarillo} No esta configurado ningun servico, ips o dominio.${borra_colores}"
                echo ""
                echo -e "${rojo} Se necesita al menos un servicio, ips o web configurado.${borra_colores}"
                sleep 5
            fi
            ;;

        90) #ayuda
            clear
            cat $ruta_ejecucion/MonitorRed/ayuda
            read p
            ;;

        99) #salir
            ctrl_c
            ;;

        *)  echo ""
            echo -e "${amarillo} Opcion no valida del menu.${borra_colores}"
            sleep 2
            ;;
    esac
done

